# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .public_ip_address import PublicIpAddress
from .subnet import Subnet
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class InterfaceIpConfiguration(UniversalBaseModel):
    id: str
    name: str
    type: typing.Optional[str] = None
    private_ip_address: typing.Optional[str] = pydantic.Field(
        alias="privateIpAddress", default=None
    )
    public_ip_address: typing.Optional[PublicIpAddress] = pydantic.Field(
        alias="publicIpAddress", default=None
    )
    subnet: typing.Optional[Subnet] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
