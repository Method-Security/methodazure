# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .load_balancer_backend_address import LoadBalancerBackendAddress
import pydantic
from .sync_mode import SyncMode
from ..azure.subresource import Subresource
from ..interface.interface_ip_configuration import InterfaceIpConfiguration
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class BackendAddressPool(UniversalBaseModel):
    """
    Collection of backend address pools used by the load balancer:
    https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v5#BackendAddressPool
    """

    id: str
    name: str
    type: str
    load_balancer_backend_addresses: typing.Optional[
        typing.List[LoadBalancerBackendAddress]
    ] = pydantic.Field(alias="loadBalancerBackendAddresses", default=None)
    location: typing.Optional[str] = None
    sync_mode: typing.Optional[SyncMode] = pydantic.Field(
        alias="syncMode", default=None
    )
    virtual_network: typing.Optional[Subresource] = pydantic.Field(
        alias="virtualNetwork", default=None
    )
    backend_ip_configurations: typing.Optional[
        typing.List[InterfaceIpConfiguration]
    ] = pydantic.Field(alias="backendIpConfigurations", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
