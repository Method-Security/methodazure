# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .load_balancer_sku import LoadBalancerSku
import typing
from .backend_address_pool import BackendAddressPool
from ..interface.interface_ip_configuration import InterfaceIpConfiguration
from .load_balancing_rule import LoadBalancingRule
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class LoadBalancer(UniversalBaseModel):
    """
    LoadBalancer represents an Azure Load Balancer as defined in the Azure Go SDK:
    https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork/v5#LoadBalancer
    """

    id: str
    name: str
    location: str
    resource_group: str = pydantic.Field(alias="resourceGroup")
    resource_group_id: str = pydantic.Field(alias="resourceGroupId")
    sku: LoadBalancerSku
    backend_address_pools: typing.Optional[typing.List[BackendAddressPool]] = (
        pydantic.Field(alias="backendAddressPools", default=None)
    )
    frontend_ip_configurations: typing.Optional[
        typing.List[InterfaceIpConfiguration]
    ] = pydantic.Field(alias="frontendIPConfigurations", default=None)
    load_balancing_rules: typing.Optional[typing.List[LoadBalancingRule]] = (
        pydantic.Field(alias="loadBalancingRules", default=None)
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
