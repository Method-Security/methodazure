// This file was auto-generated by Fern from our API Definition.

package methodazure

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/Method-Security/methodazure/generated/go/core"
)

type LoadBalancer struct {
	Name            string `json:"name" url:"name"`
	Location        string `json:"location" url:"location"`
	ResourceGroup   string `json:"resourceGroup" url:"resourceGroup"`
	ResourceGroupId string `json:"resourceGroupId" url:"resourceGroupId"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *LoadBalancer) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *LoadBalancer) UnmarshalJSON(data []byte) error {
	type unmarshaler LoadBalancer
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = LoadBalancer(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *LoadBalancer) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type LoadBalancerReport struct {
	SubscriptionId string          `json:"subscriptionId" url:"subscriptionId"`
	TenantId       string          `json:"tenantId" url:"tenantId"`
	LoadBalancers  []*LoadBalancer `json:"loadBalancers,omitempty" url:"loadBalancers,omitempty"`
	Errors         []string        `json:"errors,omitempty" url:"errors,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *LoadBalancerReport) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *LoadBalancerReport) UnmarshalJSON(data []byte) error {
	type unmarshaler LoadBalancerReport
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = LoadBalancerReport(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *LoadBalancerReport) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
